services:
  # FastAPI Application
  app:
    build: .
    container_name: ${APP_NAME:-backend-template}-api
    restart: unless-stopped
    command:
      [
        'fastapi',
        'run',
        '--port',
        '${PORT:-8000}',
        '--host',
        '${HOST:-0.0.0.0}',
      ]
    ports:
      - '${PORT:-8000}:${PORT:-8000}'
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ENVIRONMENT: ${ENVIRONMENT:-production}
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
    profiles: ['production', 'full']

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ${APP_NAME:-backend-template}-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD:-your_root_password}
      MYSQL_DATABASE: ${DATABASE_NAME:-app_db}
      MYSQL_USER: ${DATABASE_USER:-db_user}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD:-your_password}
    ports:
      - '${DATABASE_PORT:-3306}:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
    command: --default-authentication-plugin=mysql_native_password --character-set-server=${DATABASE_MYSQL_CHARSET:-utf8mb4} --collation-server=${DATABASE_MYSQL_COLLATION:-utf8mb4_general_ci}
    profiles: ['mysql']

  postgres:
    image: postgres:17
    container_name: ${APP_NAME:-backend-template}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-app_db}
      POSTGRES_USER: ${DATABASE_USER:-db_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-your_password}
    ports:
      - '${DATABASE_PORT:-5432}:${DATABASE_PORT:-5432}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    profiles: ['postgres']

    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DATABASE_USER:-db_user} -d ${DATABASE_NAME:-app_db}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
    driver: local
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
    name: ${APP_NAME:-backend-template}-network
